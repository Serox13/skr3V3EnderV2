[server]
host = 0.0.0.0
port = 7125
ssl_port = 7130
klippy_uds_address = /home/pi/printer_1_data/comms/klippy.sock
max_upload_size = 1024
max_websocket_connections = 50

#b50bfa097a1e468299d1c4077fbbcab7
[octoprint_compat]

[file_manager]
enable_object_processing: True

[data_store]
temperature_store_size = 600
gcode_store_size = 5000

[authorization]
enable_api_key = True
login_timeout = 99
max_login_attempts = 5
trusted_clients = 
	10.0.0.0/8
	127.0.0.1
	169.254.0.0/16
	172.16.0.0/12
	192.168.0.0/16
	FE80::/10
	::1/128
cors_domains = 
	http://klipper-printer.local
	http://second-printer.

[history]

[timelapse]


enabled: True
mode: layermacro
snapshoturl: http://localhost:8080/?action=snapshot
gcode_verbose: True
parkhead: False
#parkpos: back_left
#park_custom_pos_x: 0.0
#park_custom_pos_y: 0.0
#park_custom_pos_dz: 0.0
#park_travel_speed: 100
#park_retract_speed: 15
#park_extrude_speed: 15
#park_retract_distance: 1.0
#park_extrude_distance: 1.0
#hyperlapse_cycle: 30
autorender: True
constant_rate_factor: 23
output_framerate: 30
pixelformat: yuv420p
time_format_code: %Y%m%d_%H%M
#extraoutputparams: 
variable_fps: False
targetlength: 10
variable_fps_min: 5
variable_fps_max: 24
#flip_x: False
#flip_y: False
duplicatelastframe: 5
previewimage: True
saveframes: False
#wget_skip_cert_check: False
##   Following basic configuration is default to most images and don't need
##   to be changed in most scenarios. Only uncomment and change it if your
##   Image differ from standart installations. In most common scenarios 
##   a User only need [timelapse] in their configuration.
#output_path: ~/timelapse/
##   Directory where the generated video will be saved
#frame_path: /tmp/timelapse/
##   Directory where the temporary frames are saved
#ffmpeg_binary_path: /usr/bin/ffmpeg
##   Directory where ffmpeg is installed




[update_manager]
channel: dev
refresh_interval: 168

[update_manager KlipperScreen]
type: git_repo
path: ~/KlipperScreen
origin: https://github.com/jordanruthe/KlipperScreen.git
env: ~/.KlipperScreen-env/bin/python
requirements: scripts/KlipperScreen-requirements.txt
install_script: scripts/KlipperScreen-install.sh
managed_services: KlipperScreen

[update_manager timelapse]
type: git_repo
primary_branch: main
path: ~/moonraker-timelapse
origin: https://github.com/mainsail-crew/moonraker-timelapse.git
managed_services: klipper moonraker

[update_manager mainsail-config]
type: git_repo
primary_branch: master
path: ~/mainsail-config
origin: https://github.com/mainsail-crew/mainsail-config.git
managed_services: klipper

[update_manager mainsail]
type: web
channel: stable
repo: mainsail-crew/mainsail
path: ~/mainsail


[include octoeverywhere-system.cfg]

# Crowsnest update_manager entry
[update_manager crowsnest]
type: git_repo
path: ~/crowsnest
origin: https://github.com/mainsail-crew/crowsnest.git
managed_services: crowsnest
install_script: tools/pkglist.sh

[update_manager Klipper-Adaptive-Meshing-Purging]
 type: git_repo
 channel: dev
 path: ~/Klipper-Adaptive-Meshing-Purging
 origin: https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging.git
 managed_services: klipper
 primary_branch: main


